// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../../resource';
import * as ConnectivitySettingsAPI from './connectivity-settings';
import * as IdentityProvidersAPI from './identity-providers';
import * as SeatsAPI from './seats';
import * as AccessAPI from './access/access';
import * as DevicesAPI from './devices/devices';
import * as DEXAPI from './dex/dex';
import * as DLPAPI from './dlp/dlp';
import * as GatewayAPI from './gateway/gateway';
import * as NetworksAPI from './networks/networks';
import * as OrganizationsAPI from './organizations/organizations';
import * as RiskScoringAPI from './risk-scoring/risk-scoring';
import * as TunnelsAPI from './tunnels/tunnels';

export class ZeroTrust extends APIResource {
  devices: DevicesAPI.Devices = new DevicesAPI.Devices(this._client);
  identityProviders: IdentityProvidersAPI.IdentityProviders = new IdentityProvidersAPI.IdentityProviders(
    this._client,
  );
  organizations: OrganizationsAPI.Organizations = new OrganizationsAPI.Organizations(this._client);
  seats: SeatsAPI.Seats = new SeatsAPI.Seats(this._client);
  access: AccessAPI.Access = new AccessAPI.Access(this._client);
  dex: DEXAPI.DEX = new DEXAPI.DEX(this._client);
  tunnels: TunnelsAPI.Tunnels = new TunnelsAPI.Tunnels(this._client);
  connectivitySettings: ConnectivitySettingsAPI.ConnectivitySettings =
    new ConnectivitySettingsAPI.ConnectivitySettings(this._client);
  dlp: DLPAPI.DLP = new DLPAPI.DLP(this._client);
  gateway: GatewayAPI.Gateway = new GatewayAPI.Gateway(this._client);
  networks: NetworksAPI.Networks = new NetworksAPI.Networks(this._client);
  riskScoring: RiskScoringAPI.RiskScoring = new RiskScoringAPI.RiskScoring(this._client);
}

export namespace ZeroTrust {
  export import Devices = DevicesAPI.Devices;
  export type Device = DevicesAPI.Device;
  export type DeviceGetResponse = DevicesAPI.DeviceGetResponse;
  export import DevicesSinglePage = DevicesAPI.DevicesSinglePage;
  export type DeviceListParams = DevicesAPI.DeviceListParams;
  export type DeviceGetParams = DevicesAPI.DeviceGetParams;
  export import IdentityProviders = IdentityProvidersAPI.IdentityProviders;
  export type AzureAD = IdentityProvidersAPI.AzureAD;
  export type GenericOAuthConfig = IdentityProvidersAPI.GenericOAuthConfig;
  export type IdentityProvider = IdentityProvidersAPI.IdentityProvider;
  export type IdentityProviderSCIMConfig = IdentityProvidersAPI.IdentityProviderSCIMConfig;
  export type IdentityProviderType = IdentityProvidersAPI.IdentityProviderType;
  export type IdentityProviderListResponse = IdentityProvidersAPI.IdentityProviderListResponse;
  export type IdentityProviderDeleteResponse = IdentityProvidersAPI.IdentityProviderDeleteResponse;
  export import IdentityProviderListResponsesSinglePage = IdentityProvidersAPI.IdentityProviderListResponsesSinglePage;
  export type IdentityProviderCreateParams = IdentityProvidersAPI.IdentityProviderCreateParams;
  export type IdentityProviderUpdateParams = IdentityProvidersAPI.IdentityProviderUpdateParams;
  export type IdentityProviderListParams = IdentityProvidersAPI.IdentityProviderListParams;
  export type IdentityProviderDeleteParams = IdentityProvidersAPI.IdentityProviderDeleteParams;
  export type IdentityProviderGetParams = IdentityProvidersAPI.IdentityProviderGetParams;
  export import Organizations = OrganizationsAPI.Organizations;
  export type LoginDesign = OrganizationsAPI.LoginDesign;
  export type Organization = OrganizationsAPI.Organization;
  export type OrganizationRevokeUsersResponse = OrganizationsAPI.OrganizationRevokeUsersResponse;
  export type OrganizationCreateParams = OrganizationsAPI.OrganizationCreateParams;
  export type OrganizationUpdateParams = OrganizationsAPI.OrganizationUpdateParams;
  export type OrganizationListParams = OrganizationsAPI.OrganizationListParams;
  export type OrganizationRevokeUsersParams = OrganizationsAPI.OrganizationRevokeUsersParams;
  export import Seats = SeatsAPI.Seats;
  export type Seat = SeatsAPI.Seat;
  export type SeatEditResponse = SeatsAPI.SeatEditResponse;
  export type SeatEditParams = SeatsAPI.SeatEditParams;
  export import Access = AccessAPI.Access;
  export type AccessDevicePostureRule = AccessAPI.AccessDevicePostureRule;
  export type AccessRule = AccessAPI.AccessRule;
  export type AnyValidServiceTokenRule = AccessAPI.AnyValidServiceTokenRule;
  export type AuthenticationMethodRule = AccessAPI.AuthenticationMethodRule;
  export type AzureGroupRule = AccessAPI.AzureGroupRule;
  export type CertificateRule = AccessAPI.CertificateRule;
  export type CountryRule = AccessAPI.CountryRule;
  export type DomainRule = AccessAPI.DomainRule;
  export type EmailListRule = AccessAPI.EmailListRule;
  export type EmailRule = AccessAPI.EmailRule;
  export type EveryoneRule = AccessAPI.EveryoneRule;
  export type ExternalEvaluationRule = AccessAPI.ExternalEvaluationRule;
  export type GitHubOrganizationRule = AccessAPI.GitHubOrganizationRule;
  export type GroupRule = AccessAPI.GroupRule;
  export type GSuiteGroupRule = AccessAPI.GSuiteGroupRule;
  export type IPListRule = AccessAPI.IPListRule;
  export type IPRule = AccessAPI.IPRule;
  export type OktaGroupRule = AccessAPI.OktaGroupRule;
  export type SAMLGroupRule = AccessAPI.SAMLGroupRule;
  export type ServiceTokenRule = AccessAPI.ServiceTokenRule;
  export import DEX = DEXAPI.DEX;
  export type DigitalExperienceMonitor = DEXAPI.DigitalExperienceMonitor;
  export type NetworkPath = DEXAPI.NetworkPath;
  export type NetworkPathResponse = DEXAPI.NetworkPathResponse;
  export type Percentiles = DEXAPI.Percentiles;
  export import Tunnels = TunnelsAPI.Tunnels;
  export type Connection = TunnelsAPI.Connection;
  export type TunnelCreateResponse = TunnelsAPI.TunnelCreateResponse;
  export type TunnelListResponse = TunnelsAPI.TunnelListResponse;
  export type TunnelDeleteResponse = TunnelsAPI.TunnelDeleteResponse;
  export type TunnelEditResponse = TunnelsAPI.TunnelEditResponse;
  export type TunnelGetResponse = TunnelsAPI.TunnelGetResponse;
  export import TunnelListResponsesV4PagePaginationArray = TunnelsAPI.TunnelListResponsesV4PagePaginationArray;
  export type TunnelCreateParams = TunnelsAPI.TunnelCreateParams;
  export type TunnelListParams = TunnelsAPI.TunnelListParams;
  export type TunnelDeleteParams = TunnelsAPI.TunnelDeleteParams;
  export type TunnelEditParams = TunnelsAPI.TunnelEditParams;
  export type TunnelGetParams = TunnelsAPI.TunnelGetParams;
  export import ConnectivitySettings = ConnectivitySettingsAPI.ConnectivitySettings;
  export type ConnectivitySettingEditResponse = ConnectivitySettingsAPI.ConnectivitySettingEditResponse;
  export type ConnectivitySettingGetResponse = ConnectivitySettingsAPI.ConnectivitySettingGetResponse;
  export type ConnectivitySettingEditParams = ConnectivitySettingsAPI.ConnectivitySettingEditParams;
  export type ConnectivitySettingGetParams = ConnectivitySettingsAPI.ConnectivitySettingGetParams;
  export import DLP = DLPAPI.DLP;
  export import Gateway = GatewayAPI.Gateway;
  export type GatewayCreateResponse = GatewayAPI.GatewayCreateResponse;
  export type GatewayListResponse = GatewayAPI.GatewayListResponse;
  export type GatewayCreateParams = GatewayAPI.GatewayCreateParams;
  export type GatewayListParams = GatewayAPI.GatewayListParams;
  export import Networks = NetworksAPI.Networks;
  export import RiskScoring = RiskScoringAPI.RiskScoring;
  export type RiskScoringGetResponse = RiskScoringAPI.RiskScoringGetResponse;
  export type RiskScoringResetResponse = RiskScoringAPI.RiskScoringResetResponse;
  export type RiskScoringGetParams = RiskScoringAPI.RiskScoringGetParams;
  export type RiskScoringResetParams = RiskScoringAPI.RiskScoringResetParams;
}
